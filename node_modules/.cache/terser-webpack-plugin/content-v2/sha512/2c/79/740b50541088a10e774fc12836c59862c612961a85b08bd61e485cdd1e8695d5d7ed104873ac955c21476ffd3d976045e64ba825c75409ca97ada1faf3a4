{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\logan\\\\Documents\\\\coding_bootcamp\\\\clickyGame\\\\src\\\\components\\\\Banner\\\\index.js\",\"C:\\\\Users\\\\logan\\\\Documents\\\\coding_bootcamp\\\\clickyGame\\\\src\\\\components\\\\Clickable\\\\index.js\",\"C:\\\\Users\\\\logan\\\\Documents\\\\coding_bootcamp\\\\clickyGame\\\\src\\\\App.js\",\"C:\\\\Users\\\\logan\\\\Documents\\\\coding_bootcamp\\\\clickyGame\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\logan\\\\Documents\\\\coding_bootcamp\\\\clickyGame\\\\src\\\\index.js\"],\"names\":[\"Banner\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"score\",\"topScore\",\"Clickable\",\"onClick\",\"test\",\"name\",\"alt\",\"src\",\"image\",\"App\",\"state\",\"cards\",\"clicked\",\"randomize\",\"temporaryValue\",\"randomIndex\",\"array\",\"_this\",\"currentIndex\",\"length\",\"Math\",\"floor\",\"random\",\"setState\",\"handleClick\",\"indexOf\",\"console\",\"log\",\"newScore\",\"newArr\",\"push\",\"_this2\",\"this\",\"components_Banner\",\"map\",\"card\",\"components_Clickable\",\"key\",\"id\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"gmFAuBeA,IAAAA,EApBf,SAAiBC,GACb,OACIC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,yBAAd,gBACAH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YAAd,2BACAH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YAAd,UAAiCJ,EAAMK,MAAvC,gBAA2DL,EAAMM,YAIvEL,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,mFCDGI,IAAAA,EAZf,SAAoBP,GAEhB,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,gBAAgBI,QAAS,WAAA,OAAMR,EAAMS,KAAKT,EAAMU,QACzDT,EAAAC,EAAAC,cAAA,MAAA,CAAKQ,IAAKX,EAAMU,KAAME,IAAKZ,EAAMa,WCgElCC,6MAjEbC,MAAQ,CACNV,MAAO,EACPC,SAAU,EACVU,MAAOA,EACPC,QAAS,MAIXC,UAAY,WAKV,IAJA,IACiCC,EAAgBC,EAD7CC,EAAQC,EAAKP,MAAMC,MACnBO,EAAeF,EAAMG,OAGlB,IAAMD,GAGbH,EAAcK,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCJ,EAAiBE,EAHjBE,GAAgB,GAIhBF,EAAME,GAAgBF,EAAMD,GAC5BC,EAAMD,GAAeD,EAErBG,EAAKM,SAAS,CAACZ,MAAOK,OAIxBQ,YAAc,SAACnB,GAEb,GAAIY,EAAKP,MAAME,QAAQa,QAAQpB,IAAS,EACtCqB,QAAQC,IAAI,4BACZV,EAAKM,SAAS,CAACvB,MAAO,EAAGY,QAAS,SAC9B,CACJ,IAAIgB,EAAWX,EAAKP,MAAMV,MAAQ,EAC9B6B,EAASZ,EAAKP,MAAME,QACxBiB,EAAOC,KAAKzB,GACRuB,EAAWX,EAAKP,MAAMT,SACxBgB,EAAKM,SAAS,CAACvB,MAAO4B,EAAU3B,SAAU2B,EAAUhB,QAASiB,IAE7DZ,EAAKM,SAAS,CAACvB,MAAO4B,EAAUhB,QAASiB,IAK7CZ,EAAKJ,qFAIE,IAAAkB,EAAAC,KACP,OACEpC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmC,EAAD,CAAQjC,MAAOgC,KAAKtB,MAAMV,MAAOC,SAAU+B,KAAKtB,MAAMT,WAEtDL,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACdiC,KAAKtB,MAAMC,MAAMuB,IAAI,SAAAC,GACtB,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,CAAWC,IAAKF,EAAKG,GAAIjC,KAAM8B,EAAK9B,KAAMG,MAAO2B,EAAK3B,MAAOJ,KAAM2B,EAAKP,yBAzDrEe,EAAAA,WCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\r\\nimport \\\"./style.css\\\";\\r\\n\\r\\nfunction Banner (props) {\\r\\n    return (\\r\\n        <div>\\r\\n          <nav className=\\\"navbar fixed-top\\\">\\r\\n            <ul>\\r\\n                <li className=\\\"navbar-brand nav-item\\\">Clicky Game!</li>  \\r\\n                <li className=\\\"nav-item\\\">Click an image to begin</li>\\r\\n                <li className=\\\"nav-item\\\">Score: {props.score} | TopScore: {props.topScore}</li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n\\r\\n          <header className=\\\"jumbotron\\\">\\r\\n            <h1>Clicky Game!</h1>\\r\\n            <h2>Click on an image to earn points! Don't click on the same image twice!</h2>\\r\\n          </header>\\r\\n\\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default Banner;\\r\\n\\r\\n\",\"import React from 'react';\\r\\nimport \\\"./style.css\\\";\\r\\n\\r\\nfunction Clickable (props) {\\r\\n    \\r\\n    return (\\r\\n        <div className=\\\"card\\\">\\r\\n            <a className=\\\"img-container\\\" onClick={() => props.test(props.name)}>\\r\\n                <img alt={props.name} src={props.image} />\\r\\n            </a>\\r\\n        </div>\\r\\n    );\\r\\n\\r\\n}\\r\\n\\r\\nexport default Clickable;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport cards from \\\"./cards.json\\\";\\nimport Banner from \\\"./components/Banner\\\";\\nimport Clickable from \\\"./components/Clickable\\\";\\n\\nclass App extends Component {\\n  state = {\\n    score: 0,\\n    topScore: 0,\\n    cards: cards,\\n    clicked: []\\n  }\\n\\n  //Randomizes the state array of cards\\n  randomize = () => {\\n    var array = this.state.cards;\\n    var currentIndex = array.length, temporaryValue, randomIndex;\\n\\n    // While there remain elements to shuffle...\\n    while (0 !== currentIndex) {\\n\\n    // Pick a remaining element...\\n    randomIndex = Math.floor(Math.random() * currentIndex);\\n    currentIndex -= 1;\\n\\n    // And swap it with the current element.\\n    temporaryValue = array[currentIndex];\\n    array[currentIndex] = array[randomIndex];\\n    array[randomIndex] = temporaryValue;\\n  }\\n    this.setState({cards: array})\\n  }\\n\\n  //hadles an click on the \\n  handleClick = (name) => {\\n    //if clicked already -> reset score/clicked value for all cards\\n    if (this.state.clicked.indexOf(name) >= 0){\\n      console.log(\\\"this was already clicked\\\");\\n      this.setState({score: 0, clicked: []});\\n    }else {\\n      var newScore = this.state.score + 1;\\n      var newArr = this.state.clicked;\\n      newArr.push(name);\\n      if (newScore > this.state.topScore) {\\n        this.setState({score: newScore, topScore: newScore, clicked: newArr});\\n      } else {\\n        this.setState({score: newScore, clicked: newArr});\\n      }\\n    }\\n\\n    // console.log(\\\"Randomizing...\\\")\\n    this.randomize();\\n\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Banner score={this.state.score} topScore={this.state.topScore} />\\n\\n        <div className=\\\"container\\\">\\n        {this.state.cards.map(card => {\\n        return <Clickable key={card.id} name={card.name} image={card.image} test={this.handleClick} />\\n        })}\\n        </div>\\n\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(e){e.exports=[{id:0,name:\"SpongeBob\",image:\"https://upload.wikimedia.org/wikipedia/en/thumb/4/47/Spongebob-squarepants.svg/666px-Spongebob-squarepants.svg.png\",occupation:\"Fry Cook\",location:\"A Pineapple Under the Sea\"},{id:1,name:\"Mr. Krabs\",image:\"https://vignette3.wikia.nocookie.net/vsbattles/images/8/80/Mr._Krabs.png/revision/latest?cb=20150919162131\",occupation:\"Restaurant Owner\",location:\"A Giant Anchor\"},{id:2,name:\"Squidward\",image:\"https://vignette2.wikia.nocookie.net/fictionalcharacters/images/a/ac/Squidward.png/revision/latest?cb=20131121012626\",occupation:\"Cashier\",location:\"An Easter Island Head\"},{id:3,name:\"Dexter\",image:\"https://s-media-cache-ak0.pinimg.com/originals/fe/32/49/fe32495d45283cd6860ae122f0aeaad9.png\",occupation:\"Boy Genius\",location:\"A Secret Laboratory\"},{id:4,name:\"Courage\",image:\"https://vignette4.wikia.nocookie.net/vsbattles/images/3/39/Courage-0.png/revision/latest?cb=20160719055423\",occupation:\"A Cowardly Dog\",location:\"Nowhere, Kansas\"},{id:5,name:\"Doug Funnie\",image:\"https://vignette1.wikia.nocookie.net/doug/images/3/3b/Doug001.gif/revision/latest?cb=20110807170511\",occupation:\"Student\",location:\"Bluffington\"},{id:6,name:\"Bugs Bunny\",image:\"https://vignette2.wikia.nocookie.net/deathbattlefanon/images/2/2b/Bugs_Bunny.png/revision/latest?cb=20151206010607\",occupation:\"Looney Toon\",location:\"A Rabbit Burrow\"},{id:7,name:\"Johnny Bravo\",image:\"http://vignette3.wikia.nocookie.net/p__/images/9/9a/Johnny_Bravo.png/revision/latest?cb=20131031233339&path-prefix=protagonist\",occupation:\"Ladies Man\",location:\"Aron City\"},{id:8,name:\"Tommy Pickles\",image:\"https://vignette4.wikia.nocookie.net/uncyclopedia/images/e/e4/Tommy_Pickles.png/revision/latest?cb=20110530102641\",occupation:\"Adventurer\",location:\"California\"},{id:9,name:\"Rocko\",image:\"http://vignette3.wikia.nocookie.net/rockosmodernlife/images/9/9e/Rockos-modern-life-4e582a8f06a41.png/revision/latest?cb=20130522173416\",occupation:\"Cashier\",location:\"O-Town, California\"},{id:10,name:\"Captain Planet\",image:\"http://vignette2.wikia.nocookie.net/dragon-rap-battles/images/b/b6/Captain_Planet.png/revision/latest?cb=20160911200836\",occupation:\"Superhero\",location:\"Earth\"},{id:11,name:\"Ickis\",image:\"http://static.tvtropes.org/pmwiki/pub/images/ickis.png\",occupation:\"Ahhhh! A Real Monster!\",location:\"Under a City Dump\"}]},,,function(e,a,t){e.exports=t(23)},,,,,,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){},,function(e,a,t){\"use strict\";t.r(a);var n=t(0),i=t.n(n),o=t(2),c=t.n(o),r=(t(15),t(3)),s=t(4),l=t(7),m=t(5),p=t(8),g=(t(17),t(6));t(19);var u=function(e){return i.a.createElement(\"div\",null,i.a.createElement(\"nav\",{className:\"navbar fixed-top\"},i.a.createElement(\"ul\",null,i.a.createElement(\"li\",{className:\"navbar-brand nav-item\"},\"Clicky Game!\"),i.a.createElement(\"li\",{className:\"nav-item\"},\"Click an image to begin\"),i.a.createElement(\"li\",{className:\"nav-item\"},\"Score: \",e.score,\" | TopScore: \",e.topScore))),i.a.createElement(\"header\",{className:\"jumbotron\"},i.a.createElement(\"h1\",null,\"Clicky Game!\"),i.a.createElement(\"h2\",null,\"Click on an image to earn points! Don't click on the same image twice!\")))};t(21);var d=function(e){return i.a.createElement(\"div\",{className:\"card\"},i.a.createElement(\"a\",{className:\"img-container\",onClick:function(){return e.test(e.name)}},i.a.createElement(\"img\",{alt:e.name,src:e.image})))},h=function(e){function a(){var e,t;Object(r.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=Object(l.a)(this,(e=Object(m.a)(a)).call.apply(e,[this].concat(i)))).state={score:0,topScore:0,cards:g,clicked:[]},t.randomize=function(){for(var e,a,n=t.state.cards,i=n.length;0!==i;)a=Math.floor(Math.random()*i),e=n[i-=1],n[i]=n[a],n[a]=e;t.setState({cards:n})},t.handleClick=function(e){if(t.state.clicked.indexOf(e)>=0)console.log(\"this was already clicked\"),t.setState({score:0,clicked:[]});else{var a=t.state.score+1,n=t.state.clicked;n.push(e),a>t.state.topScore?t.setState({score:a,topScore:a,clicked:n}):t.setState({score:a,clicked:n})}t.randomize()},t}return Object(p.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(u,{score:this.state.score,topScore:this.state.topScore}),i.a.createElement(\"div\",{className:\"container\"},this.state.cards.map(function(a){return i.a.createElement(d,{key:a.id,name:a.name,image:a.image,test:e.handleClick})})))}}]),a}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(i.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[9,2,1]]]);","extractedComments":[]}